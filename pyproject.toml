[project]
name = "neuro-midi"
version = "0.1.0"
description = "nwb et al to midi"
authors = [
    {name = "sneakers-the-rat", email = "sneakers-the-rat@protonmail.com"},
]
dependencies = ["click>=8.2.1", "h5py>=3.14.0", "mido>=1.3.3", "numpydantic>=1.6.9", "tqdm>=4.67.1"]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "AGPL-3.0"}

[project.optional-dependencies]
dev = [
    "ruff>=0.12.0",
    "black>=25.1.0",
]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project.scripts]
neuro-midi = "neuro_midi.cli:main"


[tool.pdm]
distribution = true

[tool.pdm.scripts]
lint.composite = [
    "ruff check",
    "black . --diff",
]
format.composite = [
    "black .",
    "ruff check --fix",
]


[tool.ruff]
target-version = "py311"
include = ["src/neuro_midi/**/*.py", "tests/**/*.py", "pyproject.toml"]
exclude = []
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # annotations
    "ANN",
    # no debugger
    "T10",
    ## ----------
    # pydocstyle
    # indentation
    "D207", "D208",
    # whitespace
    "D210", "D211",
    # emptiness
    "D419",
    # snake case function name
    "N802",
    # FastAPI
    "FAST",
    # SQLi and Autoescaping in templates
    "S608", "S701",
]
ignore = [
    "ANN401", "ANN204",
    # explicit strict arg for zip
    "B905",
    # docstrings for __init__
    "D107",
    "F722",
]

fixable = ["ALL"]

[tool.black]
target-version = ['py311', 'py312', 'py313']
include = "(?:tests|neuro_midi)/.*\\.py$"
line-length = 100